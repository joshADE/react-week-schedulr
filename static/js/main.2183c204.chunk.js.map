{"version":3,"sources":["../../src/components/EventRootComponent/DefaultEventRootComponent.tsx","../../src/components/Cell/Cell.tsx","../../src/utils/getSpan.ts","../../src/utils/utility.ts","../../src/utils/createGrid.ts","../../src/components/EventContent/EventContent.tsx","../../src/components/RangeBox/RangeBox.tsx","../../src/components/Schedule/Schedule.tsx","../../src/utils/createMapCellInfoToRecurringTimeRange.ts","../../src/utils/cellToDate.ts","../../src/utils/mergeEvents.ts","../../src/components/Bounds/Bounds.tsx","../../src/components/WeekScheduler/WeekScheduler.tsx","../../src/utils/createMapDateRangeToCells.ts","../../src/utils/getEarliestTimeRange.ts","App.tsx","index.tsx"],"names":["DefaultEventRootComponent","memo","forwardRef","ref","isActive","handleDelete","id","cellIndex","rangeIndex","disableDelete","type","props","React","Cell","rect","onClick","children","style","top","left","width","height","className","styles","cell","getSpan","x1","x2","clamp","num","min","max","range","from","to","result","i","push","differenceInDays","end","start","asDays","moment","duration","startOf","diff","Math","trunc","differenceInMinutes","asMinutes","EventContent","dateRange","isStart","isEnd","format","grid","details","moveAxis","cellInfoToDateRange","onChange","checkValidDateRange","cellArray","isResizable","isMovable","onActiveChange","getIsActive","eventRootComponent","EventRootComponent","eventContentComponent","useRef","useState","modifiedCell","setModifiedCell","tempCell","setTempCell","isModifying","setModifying","originalRect","useMemo","getRectFromCell","useEffect","modifiedDateRange","rangeId","handleStop","useCallback","handleStart","handleDrag","event","y","x","preventDefault","stopPropagation","newRect","startOrEnd1","startOrEnd2","newTop","newBottom","bottom","newLeft","newRight","right","getCellFromRect","startY","startX","newCell","endX","spanX","endY","spanY","invariant","handleResize","direction","_ref","delta","maxHeight","maxRectHeight","cellHeight","cellPrecisionHeight","totalHeight","numVerticalCells","newSize","ratioStartOffset","ratioEndOffset","includes","ratioVerticalToVisualVertical","newStartY","round","newVisualStartY","newEndY","newVisualEndY","undefined","handleOnFocus","handleOnClick","eventContentProps","length","originalTop","originalLeft","originalWidth","originalHeight","Draggable","axis","bounds","totalWidth","position","onStart","onDrag","onStop","handle","tabIndex","role","onFocus","modifying","active","Resizable","size","key","onResizeStart","onResize","onResizeStop","handleWrapperClass","enable","handleClasses","bottomLeft","bottomRight","topLeft","topRight","events","dateRangeToCells","isDeletable","Object","entries","map","e","entryIndex","RangeBox","createMapCellInfoToRecurringTimeRange","toMin","fromY","toDay","fromX","originDate","startDate","add","cellToDate","endDate","endOf","isBefore","toDate","sort","range1","range2","compareAsc","mergeEvents","event1","event2","hours","closedDaysTimes","startOfWeek","cdt","cdtIndex","h","clone","set","getHours","getMinutes","getSeconds","rangesOverlap","rangeA","rangeB","isAfter","daysOfWeek","toX","days","Date","cellWidth","visualGridVerticalPrecision","verticalPrecision","defaultHours","maxVerticalPrecision","cellClickPrecision","dynamicEvents","staticEvents","onChangeStaticEvents","onChangeDynamicEvents","newEventsAddedTo","eventsOverlap","generateEvent","onEventClick","showVerticalPrecisionMarkers","numVisualVerticalCells","times","verticalMarkers","schedulerRef","parentRef","root","setDimensions","useComponentSize","toY","mins","current","clientHeight","clientWidth","endOfWeek","originOfThisDay","_startX","_startY","_endX","_endY","cells","isSame","pop","filter","createMapDateRangeToCells","numHorizontalCells","cellInfoToDateRanges","cellInfoToSingleDateRange","first","rest","JSON","stringify","maxRangeHeightSpan","minRangeHeightSpan","minRectHeight","data","this","dragging","ratioOffset","startYOffset","endYOffset","floor","createGrid","dayOfWeek","getDay","setFullYear","getFullYear","getMonth","getDate","isWithinInterval","closedDayTime","allEvents","value","activeRangeId","activeCellIndex","setActive","handleEventChange","newEventDetails","newEvents","isEqual","document","activeElement","contains","scrollIntoView","scrollMode","block","inline","wasInitialScrollPerformed","setWasInitialScrollPerformed","values","ed","startA","startB","setDay","addHours","scrollBy","handleBlur","target","handleCellClick","dayIndex","timeIndex","percentageClick","getBoundingClientRect","clientY","precisionedTimeIndex","percentage","numberOfTimesFactor","dateRanges","forEach","baseRect","markerHeight","markerWidth","onBlur","Bounds","Schedule","dynamic","static","calendar","index","timeline","minutes","header","EventRoot","arrow","interactive","disabled","hideOnClick","content","renderContent","textAlign","title","eventDetails","String","random","initialDynamicEvents","initialStaticEvents","2","weeks","App","currentYear","setCurrentYear","currentMonth","setCurrentMonth","ceil","currentWeek","setCurrentWeek","setEvents","setStaticEvents","addMonth","amount","val","N","abs","clampWrapInclusive","originDay","element","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.2183c204.chunk.js","sourcesContent":["/* eslint-disable prettier/prettier */\r\nimport React from 'react';\r\nimport { EventRootProps } from '../../types';\r\n\r\n\r\nexport const DefaultEventRootComponent =  React.memo(\r\n    React.forwardRef<any, EventRootProps>(function DefaultEventRootComponent(\r\n    {\r\n      isActive,\r\n      handleDelete,\r\n      id,\r\n      cellIndex,\r\n      rangeIndex,\r\n      disableDelete,\r\n      type,\r\n      ...props\r\n    },\r\n    ref,\r\n  ) {\r\n\r\n    return <div ref={ref} {...props} />;\r\n  }),\r\n);\r\n\r\n\r\n","/* eslint-disable prettier/prettier */\r\nimport React from \"react\";\r\nimport { Rect } from \"../../types\";\r\nimport styles from '../WeekScheduler/WeekScheduler.module.css'\r\n\r\ninterface CellProps {\r\n  rect?: Rect;\r\n  onClick?: React.MouseEventHandler;\r\n  timeIndex: number;\r\n  \r\n}\r\n\r\nexport const Cell: React.FC<CellProps> = ({\r\n  rect,\r\n  onClick,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div\r\n      style={{\r\n        top: rect?.top,\r\n        left: rect?.left,\r\n        width: rect?.width,\r\n        height: rect?.height,\r\n      }}\r\n      className={styles.cell}\r\n      onClick={onClick}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","/* eslint-disable prettier/prettier */\r\nexport const getSpan = (x1: number, x2: number) => 1 + (x2 - x1);\r\n","/* eslint-disable prettier/prettier */\r\nimport moment from \"moment\";\r\n\r\nexport function clamp(num: number, min: number, max: number) {\r\n    return num <= min ? min : num >= max ? max : num;\r\n}\r\n\r\nexport function clampWrapInclusive(val: number, min: number, max: number) {\r\n    const N = Math.abs(max - min);\r\n    let newval = 0;\r\n    if (val < min)\r\n        newval = (max + 1) - ((Math.abs(min - val) % (N + 1) !== 0) ? Math.abs(min - val) % (N + 1) : (N + 1));\r\n    else if (val > max)\r\n        newval = (min - 1) + ((Math.abs(max - val) % (N + 1) !== 0) ? Math.abs(max - val) % (N + 1) : (N + 1));\r\n    else\r\n        newval = val;\r\n    return newval;\r\n}\r\n\r\nexport function range(from: number, to: number){\r\n    const result = [];\r\n    for (let i = from; i < to; i++){\r\n        result.push(i);\r\n    }\r\n    return result;\r\n}\r\n\r\nexport function differenceInDays(end: Date, start: Date){\r\n    const duration = moment.duration(moment(end).startOf('day').diff(moment(start).startOf('day')));\r\n    const asDays = duration.asDays();\r\n    return Math.trunc(asDays);\r\n}\r\n\r\nexport function differenceInMinutes(end: Date, start: Date){\r\n    const duration = moment.duration(moment(end).diff(moment(start)));\r\n    return duration.asMinutes();\r\n}\r\n","/* eslint-disable prettier/prettier */\r\nimport { CellInfo, Grid, Rect } from \"../types\";\r\nimport { getSpan } from \"./getSpan\";\r\nimport { clamp } from \"./utility\";\r\n\r\n\r\nexport const createGrid = ({\r\n    totalHeight,\r\n    totalWidth,\r\n    numVerticalCells,\r\n    numHorizontalCells,\r\n    numVisualVerticalCells,\r\n    maxRangeHeightSpan,\r\n    minRangeHeightSpan,\r\n  }: {\r\n    totalHeight: number;\r\n    totalWidth: number;\r\n    numVerticalCells: number;\r\n    numHorizontalCells: number;\r\n    numVisualVerticalCells: number;\r\n    maxRangeHeightSpan: number;\r\n    minRangeHeightSpan: number;\r\n  }): Grid => {\r\n    const cellHeight = totalHeight / numVisualVerticalCells;\r\n    const cellWidth = totalWidth / numHorizontalCells;\r\n    const cellPrecisionHeight = totalHeight / numVerticalCells;\r\n    const ratioVerticalToVisualVertical = numVisualVerticalCells / numVerticalCells;\r\n    return {\r\n      totalHeight,\r\n      totalWidth,\r\n      numVerticalCells,\r\n      numHorizontalCells,\r\n      cellWidth,\r\n      cellHeight,\r\n      maxRectHeight: cellHeight * maxRangeHeightSpan,\r\n      minRectHeight: cellHeight * minRangeHeightSpan,\r\n      ratioVerticalToVisualVertical,\r\n      getRectFromCell(data: CellInfo) {\r\n        const { endX, startX, endY, startY, spanX, spanY } = data;\r\n        const bottom = endY * this.cellHeight;\r\n        const top = startY * this.cellHeight;\r\n        const left = startX * this.cellWidth;\r\n        const right = endX * this.cellWidth;\r\n        const height = spanY * this.cellHeight;\r\n        const width = spanX * this.cellWidth;\r\n  \r\n        return {\r\n          bottom,\r\n          top,\r\n          left,\r\n          right,\r\n          height,\r\n          width,\r\n  \r\n          // @TODO: check the math\r\n          startX: startX * this.cellWidth,\r\n          endX: endX * this.cellWidth,\r\n          startY: startY * this.cellHeight,\r\n          endY: endY * this.cellHeight,\r\n        };\r\n      },\r\n  \r\n      getCellFromRect(data: Rect, dragging = false, ratioOffset = {}) {\r\n\r\n        // offset to allow setting the postion on resizes to points where the visual grid vertical precision allows\r\n        // but not the vertical precision (for the case where vertical precision > visual grid vertical precision)\r\n        const startYOffset = ratioOffset.startY === undefined ? 0 : ratioOffset.startY;\r\n        const endYOffset = ratioOffset.endY === undefined ? 0 : ratioOffset.endY;\r\n        let startX, startY, endX, endY;\r\n\r\n        if (dragging){\r\n          startX = clamp(\r\n            Math.floor(data.left / this.cellWidth),\r\n            0,\r\n            numHorizontalCells - 1,\r\n          );\r\n          startY = \r\n            Math.floor(data.top / cellPrecisionHeight) \r\n            * (numVisualVerticalCells / numVerticalCells);\r\n          endX = clamp(\r\n            Math.floor(data.right / this.cellWidth),\r\n            0,\r\n            numHorizontalCells - 1,\r\n          );\r\n          endY = \r\n            Math.floor((data.bottom - cellHeight) / cellPrecisionHeight)\r\n            * (numVisualVerticalCells / numVerticalCells);\r\n        }else{\r\n          startX = clamp(\r\n            Math.round(data.left / this.cellWidth),\r\n            0,\r\n            numHorizontalCells - 1,\r\n          );\r\n          startY = \r\n          Math.round(data.top / cellPrecisionHeight)\r\n          * (numVisualVerticalCells / numVerticalCells) + startYOffset;\r\n          endX = clamp(\r\n            Math.round(data.right / this.cellWidth),\r\n            0,\r\n            numHorizontalCells - 1,\r\n          );\r\n          endY = \r\n            Math.round(data.bottom / cellPrecisionHeight)\r\n            * (numVisualVerticalCells / numVerticalCells) + endYOffset;\r\n        }\r\n        const spanX = clamp(getSpan(startX, endX), 1, numHorizontalCells);\r\n        const spanY = clamp(getSpan(startY, endY), minRangeHeightSpan, maxRangeHeightSpan);\r\n\r\n        return {\r\n          spanX,\r\n          spanY,\r\n          startX,\r\n          startY,\r\n          endX,\r\n          endY,\r\n        };\r\n      },\r\n    };\r\n  };","/* eslint-disable prettier/prettier */\r\nimport moment from 'moment';\r\nimport React from 'react'\r\nimport { EventDetails } from '../WeekScheduler/WeekScheduler';\r\nimport styles from '../WeekScheduler/WeekScheduler.module.css'\r\n\r\nexport type EventContentProps = {\r\n    width: number;\r\n    height: number;\r\n    dateRange: [Date, Date];\r\n    isStart: boolean;\r\n    isEnd: boolean;\r\n    type: 'dynamic' | 'static';\r\n    details: EventDetails;\r\n    id: string;\r\n    cellIndex: number;\r\n};\r\n  \r\nexport const EventContent = React.memo(function EventContent({\r\nwidth,\r\nheight,\r\ndateRange,\r\nisStart,\r\nisEnd,\r\n}: EventContentProps) {\r\n\r\n\r\nreturn (\r\n    <div\r\n    style={{ width, height }}\r\n    className={styles[\"event-content\"]}\r\n    >\r\n    <span aria-hidden className={styles.start}>\r\n        {isStart && moment(dateRange[0]).format('lll')}\r\n    </span>\r\n    {isStart && isEnd && <span> - </span>}\r\n    <span aria-hidden className={styles.end}>\r\n        {isEnd && moment(dateRange[1]).format('lll')}\r\n    </span>\r\n    </div>\r\n);\r\n});\r\n  ","/* eslint-disable prettier/prettier */\r\nimport React, { useCallback, useEffect, useMemo, useRef, useState, memo } from 'react'\r\nimport { CellInfo, Grid } from '../../types';\r\nimport { SharedScheduleProps } from '../Schedule/Schedule';\r\nimport { EventDetails } from '../WeekScheduler/WeekScheduler';\r\nimport { Resizable, ResizeCallback } from 're-resizable';\r\nimport Draggable, { DraggableEventHandler } from 'react-draggable';\r\nimport invariant from 'invariant';\r\nimport { DefaultEventRootComponent } from '../EventRootComponent/DefaultEventRootComponent';\r\nimport { EventContent, EventContentProps } from '../EventContent/EventContent';\r\nimport { clamp } from '../../utils/utility';\r\nimport styles from '../WeekScheduler/WeekScheduler.module.css'\r\n\r\n\r\ninterface RangeBoxProps {\r\n    cell: CellInfo;\r\n    grid: Grid;\r\n    id: string;\r\n    details: EventDetails;\r\n    cellIndex: number;\r\n    rangeIndex: number;\r\n    cellArray: CellInfo[];\r\n}\r\n// memo at bottom of file\r\nconst RangeBox: React.FC<RangeBoxProps & SharedScheduleProps> = ({\r\n    cell,\r\n    grid,\r\n    id,\r\n    cellIndex,\r\n    rangeIndex,\r\n    details,\r\n    moveAxis,\r\n    cellInfoToDateRange,\r\n    onChange,\r\n    checkValidDateRange,\r\n    cellArray,\r\n    isResizable,\r\n    isMovable,\r\n    onActiveChange,\r\n    onClick,\r\n    getIsActive,\r\n    disableDelete,\r\n    type,\r\n    className,\r\n    eventRootComponent: EventRootComponent = DefaultEventRootComponent,\r\n    eventContentComponent,\r\n}) => {\r\n    const ref = useRef(null);\r\n    const [modifiedCell, setModifiedCell] = useState(cell);\r\n    const [tempCell, setTempCell] = useState(modifiedCell);\r\n    const [isModifying, setModifying] = useState(false);\r\n    const originalRect = useMemo(() => grid.getRectFromCell(cell), [cell, grid]);\r\n    const rect = useMemo(() => grid.getRectFromCell(modifiedCell), [\r\n      modifiedCell,\r\n      grid,\r\n    ]);\r\n\r\n   \r\n    useEffect(() => {\r\n      setModifiedCell(cell);\r\n    }, [cell]);\r\n  \r\n    const modifiedDateRange = useMemo(() => cellInfoToDateRange(modifiedCell), [\r\n      cellInfoToDateRange,\r\n      modifiedCell,\r\n    ]);\r\n\r\n    const isActive = useMemo(() => getIsActive({ cellIndex, rangeId: id }), [\r\n      cellIndex,\r\n      id,\r\n      getIsActive,\r\n    ]);\r\n\r\n\r\n      const handleStop = useCallback(() => {\r\n        setModifying(false);\r\n        if (!onChange) {\r\n          return;\r\n        }\r\n        \r\n          \r\n  \r\n          if (checkValidDateRange(id, cellInfoToDateRange(modifiedCell))){\r\n            \r\n            \r\n            onChange({...details, range: cellInfoToDateRange(modifiedCell)}, id);\r\n          }else{\r\n            setModifiedCell(tempCell);\r\n          }\r\n  \r\n        }, [tempCell, modifiedCell, setModifiedCell, id, details, cellInfoToDateRange, onChange, checkValidDateRange, setModifying]);\r\n  \r\n        const handleStart = useCallback(() => {\r\n          \r\n          \r\n          setModifying(true);\r\n          setTempCell(modifiedCell);\r\n          \r\n    \r\n          }, [modifiedCell, setTempCell, setModifying]);\r\n    \r\n\r\n    const handleDrag: DraggableEventHandler = useCallback(\r\n        (event, { y, x }) => {\r\n          if (moveAxis === 'none') {\r\n            return;\r\n          }\r\n    \r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n    \r\n          const newRect = {\r\n            ...rect,\r\n          };\r\n    \r\n          if (moveAxis === 'both' || moveAxis === 'y') {\r\n            const startOrEnd1 = y;\r\n            const startOrEnd2 = startOrEnd1 + rect.height;\r\n            const newTop = Math.min(startOrEnd1, startOrEnd2);\r\n            const newBottom = newTop + rect.height;\r\n            newRect.bottom = newBottom;\r\n            newRect.top = newTop;\r\n          }\r\n    \r\n          if (moveAxis === 'both' || moveAxis === 'x') {\r\n            const startOrEnd1 = x;\r\n            const startOrEnd2 = startOrEnd1 + rect.width;\r\n            const newLeft = Math.min(startOrEnd1, startOrEnd2);\r\n            const newRight = newLeft + rect.width;\r\n            newRect.right = newRight;\r\n            newRect.left = newLeft;\r\n          }\r\n    \r\n          const { startY, startX } = grid.getCellFromRect(newRect);\r\n    \r\n          const newCell = {\r\n            ...cell,\r\n            startX: moveAxis === 'y' ? cell.startX : startX,\r\n            endX: moveAxis === 'x' || moveAxis === 'both' ? startX + cell.spanX - 1 : cell.endX,\r\n            startY: moveAxis === 'x' ? cell.startY : startY,\r\n            endY: moveAxis === 'y' || moveAxis === 'both' ? startY + cell.spanY - 1 : cell.endY,\r\n          };\r\n    \r\n          invariant(\r\n            newCell.spanY === cell.spanY && newCell.spanX === cell.spanX,\r\n            `Expected the dragged time cell to have the same dimensions`,\r\n          );\r\n    \r\n          setModifiedCell(newCell);\r\n          setModifying(true);\r\n        },\r\n        [grid, rect, moveAxis, cell, setModifiedCell, setModifying],\r\n      );\r\n\r\n\r\n\r\n      const handleResize: ResizeCallback = useCallback(\r\n        (event, direction, _ref, delta) => {\r\n          if (!isResizable) {\r\n            return;\r\n          }\r\n    \r\n          event.preventDefault();\r\n          event.stopPropagation();\r\n    \r\n          if (delta.height === 0) {\r\n            return;\r\n          }\r\n\r\n          const maxHeight = grid.maxRectHeight;\r\n          const cellHeight = grid.cellHeight;\r\n          const cellPrecisionHeight = grid.totalHeight / grid.numVerticalCells; // grid.minRectHeight;// grid.totalHeight / grid.numVerticalCells;\r\n    \r\n          // const scaleHeight = Math.max(0, Math.floor(grid.ratioVerticalToVisualVertical / 2)) * cellHeight;\r\n\r\n          const newSize = {\r\n            height: delta.height + rect.height,\r\n            width: delta.width + rect.width,\r\n          };\r\n    \r\n          const newRect = {\r\n            ...originalRect,\r\n            ...newSize,\r\n          };\r\n\r\n          let ratioStartOffset = 0;\r\n          let ratioEndOffset = 0;\r\n    \r\n          if (direction.includes('top')) {\r\n            // newRect.top -= delta.height;\r\n            // this clamp is a temporary fix to solve a problem where if you \r\n            // rezise the top at max height it also moves the whole cell up instead\r\n            // not needed for bottom position\r\n            newRect.top = clamp(newRect.top - delta.height,newRect.bottom - maxHeight + cellHeight,newRect.bottom - cellPrecisionHeight + cellHeight);\r\n          } else if (direction.includes('bottom')) {\r\n            newRect.bottom += delta.height;\r\n          }\r\n          \r\n\r\n          // account for the snapping behaviour when resizing that snaps to the nearest vertical precision mark\r\n          // and skip the min height when the verticalPrecision > visualGrigVericalPrecision\r\n          if (grid.ratioVerticalToVisualVertical > 1){\r\n              const newStartY = Math.round(newRect.top / cellPrecisionHeight) * grid.ratioVerticalToVisualVertical;\r\n              const newVisualStartY = Math.round(newRect.top / grid.cellHeight);\r\n              if (newStartY - newVisualStartY !== 0){\r\n                ratioStartOffset = newVisualStartY - newStartY;\r\n                if (newRect.top <= 0){\r\n                  ratioStartOffset = Math.max(0, ratioStartOffset);\r\n                }\r\n              } \r\n              const newEndY = Math.round(newRect.bottom / cellPrecisionHeight) * grid.ratioVerticalToVisualVertical;\r\n              const newVisualEndY = Math.round(newRect.bottom / grid.cellHeight);\r\n              if (newEndY - newVisualEndY !== 0){\r\n                ratioEndOffset = newVisualEndY - newEndY;\r\n                if (newRect.bottom >= grid.totalHeight - cellHeight){\r\n                  ratioEndOffset = Math.min(0, ratioEndOffset);\r\n                }\r\n              } \r\n          }\r\n\r\n    \r\n          const { spanY, startY, endY } = grid.getCellFromRect(newRect, false, { startY: ratioStartOffset, endY: ratioEndOffset});\r\n          const newCell = {\r\n            ...cell,\r\n            spanY,\r\n            startY,\r\n            endY,\r\n          };\r\n    \r\n          \r\n          setModifiedCell(newCell);\r\n          \r\n        },\r\n        [grid, rect, setModifiedCell, isResizable, cell, originalRect],\r\n      );\r\n\r\n      const handleDelete = useCallback(() => {\r\n        if (!onChange || disableDelete) {\r\n          return;\r\n        }\r\n    \r\n        onChange(undefined, id);\r\n      }, [onChange, disableDelete, id]);\r\n\r\n      const handleOnFocus = useCallback(() => {\r\n        if (!onActiveChange) {\r\n          return;\r\n        }\r\n    \r\n        onActiveChange([id, cellIndex]);\r\n      }, [onActiveChange, id, cellIndex]);\r\n    \r\n      const handleOnClick = useCallback(() => {\r\n        if (!onClick || !isActive) {\r\n          return;\r\n        }\r\n    \r\n        onClick([id, cellIndex]);\r\n      }, [onClick, id, isActive, cellIndex]);\r\n      \r\n  \r\n    \r\n    const { top, left, width, height } = rect;\r\n    const eventContentProps: EventContentProps = { \r\n      width, \r\n      height, \r\n      dateRange: modifiedDateRange, \r\n      isStart: cellIndex === 0, \r\n      isEnd: cellIndex === cellArray.length - 1,\r\n      id,\r\n      cellIndex,\r\n      details,\r\n      type\r\n    };\r\n    const {top: originalTop, left: originalLeft, width: originalWidth, height: originalHeight} = originalRect;\r\n        return (<div>\r\n            <Draggable\r\n                axis={moveAxis}\r\n                bounds={{\r\n                    top: 0,\r\n                    bottom: grid.totalHeight - height,\r\n                    left: 0,\r\n                    right: grid.totalWidth - width,\r\n                }}\r\n                position={{ x: left, y: top }}\r\n                onStart={handleStart}\r\n                onDrag={handleDrag}\r\n                onStop={handleStop}\r\n                handle={`.${styles[\"handle-drag\"]}`}\r\n                // cancel=\".handle, .handle.bottom, .handle.top\"\r\n            >\r\n                  <EventRootComponent\r\n                    tabIndex=\"0\"\r\n                    role=\"button\" \r\n                    disableDelete={disableDelete}\r\n                    onFocus={handleOnFocus}\r\n                    onClick={handleOnClick}\r\n                    handleDelete={handleDelete}\r\n                    cellIndex={cellIndex}\r\n                    rangeIndex={rangeIndex}\r\n                    id={id}\r\n                    isActive={isActive}\r\n                    ref={ref}\r\n                    className={`${styles[\"range-box\"]} ${styles.event} ${isModifying? styles.modifying: ''} ${isActive? styles.active: ''} ${className}`} \r\n                    style={{ width, height}}\r\n                    type={type}\r\n                  >\r\n                  {isMovable && <div className={styles[\"handle-drag\"]} />}\r\n                <Resizable\r\n                  size={{width, height}}\r\n                  key={`${rangeIndex}.${cellIndex}.${cellArray.length}.${originalRect.top}.${originalRect.left}`}\r\n                  onResizeStart={handleStart}\r\n                  onResize={handleResize}\r\n                  onResizeStop={handleStop}\r\n                  handleWrapperClass={styles[\"handle-wrapper\"]}\r\n                  enable={isResizable? { top: true, bottom: true}: {}}\r\n                  handleClasses={{\r\n                    bottom: `${styles.handle} ${styles.bottom}`,\r\n                    bottomLeft: styles.handle,\r\n                    bottomRight: styles.handle,\r\n                    left: styles.handle,\r\n                    right: styles.handle,\r\n                    top: `${styles.handle} ${styles.top}`,\r\n                    topLeft: styles.handle,\r\n                    topRight: styles.handle\r\n                  }}\r\n                > \r\n                  {eventContentComponent ? \r\n                  eventContentComponent(eventContentProps) : \r\n                  <EventContent\r\n                    {...eventContentProps}\r\n                  />\r\n                  }\r\n                    </Resizable>\r\n                </EventRootComponent>\r\n            </Draggable>\r\n            {isModifying && <div className={styles[\"original-range-box\"]} style={{ top: originalTop, left: originalLeft, width: originalWidth, height: originalHeight}} />}\r\n            </div>);\r\n}\r\n\r\nexport default memo(RangeBox)","/* eslint-disable prettier/prettier */\r\nimport React, { memo } from 'react'\r\nimport { CellInfo, DateRange, EventType, Grid, OnChangeCallback } from '../../types';\r\nimport { EventContentProps } from '../EventContent/EventContent';\r\nimport RangeBox from '../RangeBox/RangeBox';\r\nimport { Events } from '../WeekScheduler/WeekScheduler';\r\nimport styles from '../WeekScheduler/WeekScheduler.module.css'\r\n\r\nexport interface SharedScheduleProps {\r\n    onChange?: OnChangeCallback;\r\n    grid: Grid;\r\n    isResizable?: boolean;\r\n    isDeletable?: boolean;\r\n    isMovable?: boolean;\r\n    moveAxis: 'none' | 'both' | 'x' | 'y';\r\n    cellInfoToDateRange(cell: CellInfo): DateRange;\r\n    checkValidDateRange(id: string, dateRange: DateRange): boolean;\r\n    eventContentComponent?: (props: EventContentProps) => JSX.Element;\r\n    eventRootComponent?: any;\r\n    onActiveChange?(index: [string, number] | [null, null]): void;\r\n    onClick?(index: [string, number] | [null, null]): void;\r\n    getIsActive(indexes: { cellIndex: number; rangeId: string }): boolean;\r\n    disableDelete?: boolean;\r\n    type: EventType;\r\n    className?: string;\r\n}\r\n\r\ninterface ScheduleProps {\r\n    events: Events;\r\n    dateRangeToCells: (range: DateRange) => CellInfo[];\r\n}\r\n\r\nconst Schedule: React.FC<ScheduleProps & SharedScheduleProps> = ({\r\n    events,\r\n    isMovable,\r\n    dateRangeToCells,\r\n    grid,\r\n    onChange,\r\n    moveAxis,\r\n    cellInfoToDateRange,\r\n    checkValidDateRange,\r\n    isResizable,\r\n    isDeletable,\r\n    onActiveChange,\r\n    onClick,\r\n    getIsActive,\r\n    disableDelete,\r\n    eventRootComponent,\r\n    eventContentComponent,\r\n    type,\r\n    className   \r\n}) => {\r\n        return (\r\n        <div className={styles[\"range-boxes\"]}>\r\n            {\r\n                Object.entries(events).map((e, entryIndex, entries) => (\r\n                <span className={styles[\"schedule-range-group\"]} key={e[0]}>\r\n                    {dateRangeToCells(e[1].range).map((cell, cellIndex, cellArray) => \r\n                    <RangeBox \r\n                        key={`${entryIndex}.${entries.length}.${cellIndex}.${cellArray.length}`}\r\n                        cell={cell}\r\n                        grid={grid}\r\n                        id={e[0]}\r\n                        details={e[1]}\r\n                        onChange={onChange}\r\n                        moveAxis={moveAxis}\r\n                        cellInfoToDateRange={cellInfoToDateRange}\r\n                        checkValidDateRange={checkValidDateRange}\r\n                        rangeIndex={entryIndex}\r\n                        cellIndex={cellIndex}\r\n                        cellArray={cellArray}\r\n                        isResizable={isResizable}\r\n                        isDeletable={isDeletable}\r\n                        isMovable={isMovable}\r\n                        onActiveChange={onActiveChange}\r\n                        onClick={onClick}\r\n                        getIsActive={getIsActive}\r\n                        disableDelete={disableDelete}\r\n                        eventContentComponent={eventContentComponent}\r\n                        eventRootComponent={eventRootComponent}\r\n                        type={type}\r\n                        className={className}\r\n                    />)}\r\n                </span>))\r\n            }\r\n        </div>);\r\n}\r\n\r\nexport default memo(Schedule)","/* eslint-disable prettier/prettier */\r\nimport compareAsc from \"date-fns/compareAsc\";\r\nimport moment from \"moment\";\r\nimport { DateRange, MapCellInfoToDateRange } from \"../types\";\r\nimport { cellToDate } from \"./cellToDate\";\r\nimport { range } from \"./utility\";\r\n\r\nexport type RecurringTimeRange = DateRange[];\r\n\r\nexport const createMapCellInfoToRecurringTimeRange: MapCellInfoToDateRange = ({\r\n  fromY: toMin,\r\n  fromX: toDay,\r\n  originDate,\r\n}) => ({ startX, startY, endX, spanY }) => {\r\n  const result = range(startX, endX + 1)\r\n    .map(i => {\r\n      const startDate = cellToDate({\r\n        startX: i,\r\n        startY,\r\n        toMin,\r\n        toDay,\r\n        originDate,\r\n      });\r\n      const endDate = moment.min(\r\n        moment(startDate).add(toMin(spanY), 'minutes'),\r\n        moment(startDate).endOf('day'),\r\n      );\r\n\r\n      const range: DateRange = moment(startDate).isBefore(endDate)\r\n        ? [startDate.toDate(), endDate.toDate()]\r\n        : [endDate.toDate(), startDate.toDate()];\r\n\r\n      return range;\r\n    })\r\n    .sort((range1, range2) =>  compareAsc(range1[0], range2[0]));\r\n\r\n  return result;\r\n};","/* eslint-disable prettier/prettier */\r\nimport moment from \"moment\";\r\n\r\n\r\nexport const cellToDate = ({\r\n    startX,\r\n    startY,\r\n    toMin,\r\n    originDate,\r\n}: {\r\n    startX: number;\r\n    startY: number;\r\n    toMin: (y: number) => number;\r\n    toDay: (x: number) => number;\r\n    originDate: Date;\r\n}) => moment(originDate).add(startX, 'days').add(toMin(startY), 'minutes');","/* eslint-disable prettier/prettier */\r\nimport { Events } from '../components/WeekScheduler/WeekScheduler';\r\n\r\nexport function mergeEvents(\r\n  event1: Events | undefined,\r\n  event2: Events | null,\r\n): Events {\r\n\r\n  if (!event1) {\r\n    return {};\r\n  }\r\n\r\n  if (event2 === null) {\r\n    return event1;\r\n  }\r\n\r\n  return {...event1, ...event2 };\r\n}","/* eslint-disable prettier/prettier */\r\nimport React, { memo } from 'react'\r\nimport { CellInfo, DateRange, Grid } from '../../types';\r\nimport { ClosedDaysTimes, Hours } from '../WeekScheduler/WeekScheduler';\r\nimport styles from '../WeekScheduler/WeekScheduler.module.css'\r\n\r\ninterface BoundsProps {\r\n    grid: Grid;\r\n    dateRangeToCells: (range: DateRange) => CellInfo[];\r\n    hours?: Hours;\r\n    closedDaysTimes?: ClosedDaysTimes;\r\n    startOfWeek: moment.Moment;\r\n}\r\n\r\nconst Bounds: React.FC<BoundsProps> = ({\r\n    grid,\r\n    hours,\r\n    closedDaysTimes,\r\n    dateRangeToCells,\r\n    startOfWeek\r\n}) => {\r\n    \r\n    return (\r\n        <div className={styles.bounds}>\r\n            {closedDaysTimes && closedDaysTimes.map((cdt, cdtIndex) => (\r\n            <span className={styles[\"closed-day-time-container\"]} key={cdtIndex}>\r\n            {dateRangeToCells(cdt).map((cell, cellIndex, cellArray) => {\r\n                    const { left, top, width, height } = grid.getRectFromCell(cell);\r\n\r\n                    return <div \r\n                        className={`${styles[\"bound-box\"]} ${styles[\"closed-day-time\"]}`} \r\n                        style={{left, top, width, height}}\r\n                        key={`${cellIndex}.${cellArray.length}`}\r\n                    />})}\r\n            </span>)\r\n            )}\r\n\r\n            {hours && Object.entries(hours).map(h => (\r\n            <span className={styles[\"hours-container\"]} key={h[0]}>\r\n\r\n            {dateRangeToCells([startOfWeek.clone().add(h[0], 'days').startOf('day').toDate(), startOfWeek.clone().add(h[0], 'days').set({'hour':h[1][0].getHours(), 'minute':h[1][0].getMinutes(), 'second':h[1][0].getSeconds()}).toDate()]).map((cell, cellIndex, cellArray) => {\r\n                const { left, top, width, height } = grid.getRectFromCell(cell);\r\n\r\n                return <div \r\n                    className={`${styles[\"bound-box\"]} ${styles.hours}`}\r\n                    style={{left, top, width, height}}\r\n                    key={`start.${h[0]}.${cellIndex}.${cellArray.length}`}\r\n                />})}\r\n            {dateRangeToCells([startOfWeek.clone().add(h[0], 'days').set({'hour':h[1][1].getHours(), 'minute':h[1][1].getMinutes(), 'second':h[1][1].getSeconds()}).toDate(), startOfWeek.clone().add(h[0], 'days').endOf('day').toDate()]).map((cell, cellIndex, cellArray) => {\r\n                const { left, top, width, height } = grid.getRectFromCell(cell);\r\n\r\n                return <div \r\n                    className={`${styles[\"bound-box\"]} ${styles.hours}`} \r\n                    style={{left, top, width, height}}\r\n                    key={`end.${h[0]}.${cellIndex}.${cellArray.length}`}\r\n                />})}\r\n            \r\n            </span>)\r\n            )}\r\n        </div>);\r\n}\r\n\r\nexport default memo(Bounds);","/* eslint-disable prettier/prettier */\r\nimport React, {\r\n  useState,\r\n  useEffect,\r\n  useRef,\r\n  useMemo,\r\n  useCallback,\r\n  memo,\r\n} from \"react\";\r\nimport moment from \"moment\";\r\nimport isEqual from 'date-fns/isEqual'\r\nimport invariant from 'invariant';\r\nimport styles from './WeekScheduler.module.css'\r\nimport { Cell } from \"../Cell/Cell\";\r\nimport { CellInfo, DateRange, Grid, OnChangeCallback } from \"../../types\";\r\nimport { createGrid } from \"../../utils/createGrid\";\r\nimport Schedule, { SharedScheduleProps } from \"../Schedule/Schedule\";\r\nimport { createMapDateRangeToCells } from \"../../utils/createMapDateRangeToCells\";\r\nimport {\r\n  createMapCellInfoToRecurringTimeRange,\r\n} from \"../../utils/createMapCellInfoToRecurringTimeRange\";\r\nimport { getSpan } from \"../../utils/getSpan\";\r\nimport { mergeEvents } from \"../../utils/mergeEvents\";\r\nimport isWithinInterval from \"date-fns/isWithinInterval\";\r\n// import { useClickAndDrag } from \"../../hooks/useClickAndDrag\";\r\nimport Bounds from \"../Bounds/Bounds\";\r\nimport addHours from \"date-fns/addHours\";\r\nimport { getEarliestTimeRange } from \"../../utils/getEarliestTimeRange\";\r\nimport scrollIntoView from \"scroll-into-view-if-needed\";\r\nimport useComponentSize from \"@rehooks/component-size\";\r\nimport { isAfter, isBefore } from \"date-fns\";\r\n\r\nexport type Hours = {[id:number]: DateRange}\r\nexport type ClosedDaysTimes = DateRange[];\r\n\r\nexport type EventDetails = { range: DateRange; title?: string; desc?: string };\r\nexport type Events = { [id: string]: EventDetails };\r\n\r\ninterface WeekSchedulerProps {\r\n  originDate?: Date;\r\n  /**\r\n   * The height of the container for the whole scheduler. If not set, it will be 100vh.\r\n   */\r\n  height?: string;\r\n  /**\r\n   * The width of the container for the whole scheduler. If not set, it will be 100%.\r\n   */\r\n  width?: string;\r\n  /**\r\n   * The cell height. If not set, it will be computed based on the available height.\r\n   */\r\n  cellHeight?: number;\r\n  /**\r\n   * The cell width. If not set, it will be computed based on the available width.\r\n   */\r\n  cellWidth?: number;\r\n  /**\r\n   * The visual grid increments in minutes.\r\n   * @default 120\r\n   */\r\n  visualGridVerticalPrecision?: number;\r\n\r\n  /**\r\n   * The minimum number of minutes a created range can span\r\n   * @default 15\r\n   */\r\n  verticalPrecision?: number;\r\n\r\n  /**\r\n   * Show markers on the grid to indicate the increments of the vertical precision\r\n   * @default false\r\n   */\r\n  showVerticalPrecisionMarkers?: boolean;\r\n\r\n  /**\r\n   * The minimum number of minutes for an time block\r\n   * created with a single click.\r\n   * @default visualGridVerticalPrecision\r\n   */\r\n  cellClickPrecision?: number;\r\n\r\n  /**\r\n   * The maximum number of minutes a createed range could be span.\r\n   * If not provided it will be the number of minutes in a day.\r\n   */\r\n   maxVerticalPrecision?: number;\r\n\r\n  /**\r\n   * Events that could be moved around\r\n   */\r\n  dynamicEvents: Events;\r\n  /**\r\n   * Events that can't be moved but take up space and prevent other events from moving to their location\r\n   */\r\n  staticEvents: Events;\r\n  /**\r\n   * The view will initially be scrolled to these hours.\r\n   * Defaults to work hours (9-17).\r\n   * @default [9, 17]\r\n   */\r\n  defaultHours?: [number, number];\r\n  onChangeStaticEvents: (newEvents: Events) => void;\r\n  onChangeDynamicEvents: (newEvents: Events) => void;\r\n  onEventClick?: SharedScheduleProps['onClick'];\r\n  newEventsAddedTo: \"static\" | \"dynamic\" | \"none\";\r\n  eventsOverlap?: boolean;\r\n  disableDelete?: boolean;\r\n  eventContentComponent?: SharedScheduleProps['eventContentComponent'];\r\n  eventRootComponent?: SharedScheduleProps['eventRootComponent'];\r\n  generateEvent: (eventDetails: EventDetails) => Events;\r\n  hours?: Hours;\r\n  closedDaysTimes?: ClosedDaysTimes;\r\n}\r\n\r\nconst rangesOverlap = (rangeA: DateRange, rangeB: DateRange) => {\r\n  return isBefore(rangeA[0], rangeB[1]) && isAfter(rangeA[1], rangeB[0]);\r\n}\r\n\r\nexport const daysOfWeek = [0, 1, 2, 3, 4, 5, 6];\r\nconst NumberOfMinutesInADay = 24 * 60;\r\nconst horizontalPrecision = 1;\r\nconst toDay = (x: number): number => x * horizontalPrecision;\r\nconst toX = (days: number): number => days / horizontalPrecision;\r\n\r\nconst WeekScheduler: React.FC<WeekSchedulerProps> = ({\r\n  originDate = new Date(),\r\n  width,\r\n  height,\r\n  cellWidth,\r\n  cellHeight,\r\n  visualGridVerticalPrecision = 120,\r\n  verticalPrecision = 15,\r\n  defaultHours = [9, 17],\r\n  maxVerticalPrecision = NumberOfMinutesInADay,\r\n  cellClickPrecision = visualGridVerticalPrecision,\r\n  dynamicEvents,\r\n  staticEvents,\r\n  onChangeStaticEvents,\r\n  onChangeDynamicEvents,\r\n  newEventsAddedTo,\r\n  eventsOverlap,\r\n  disableDelete,\r\n  generateEvent,\r\n  hours,\r\n  closedDaysTimes,\r\n  onEventClick,\r\n  eventContentComponent,\r\n  eventRootComponent,\r\n  showVerticalPrecisionMarkers,\r\n}) => {\r\n\r\n\r\n  \r\n  const numVerticalCells = NumberOfMinutesInADay / verticalPrecision;\r\n  const numHorizontalCells = 7 / horizontalPrecision;\r\n  const numVisualVerticalCells =\r\n    NumberOfMinutesInADay / visualGridVerticalPrecision;\r\n  const times: number[] = [];\r\n  const verticalMarkers: number[] = [];\r\n  const schedulerRef = useRef<HTMLDivElement>(null);\r\n  const parentRef = useRef<HTMLDivElement>(null);\r\n  const root = useRef<HTMLDivElement>(null);\r\n  const [[totalHeight, totalWidth], setDimensions] = useState([0, 0]);\r\n\r\n  const size = useComponentSize(parentRef);\r\n\r\n  // const {\r\n  //   style: dragBoxStyle,\r\n  //   box,\r\n  //   isDragging,\r\n  //   hasFinishedDragging,\r\n  //   cancel,\r\n  // } = useClickAndDrag(parentRef, newEventsAddedTo === 'none');\r\n\r\n  const toMin = useCallback(\r\n    (y: number) =>\r\n      (y * verticalPrecision) /\r\n      (verticalPrecision / visualGridVerticalPrecision),\r\n    [verticalPrecision, visualGridVerticalPrecision]\r\n  );\r\n  const toY = useCallback(\r\n    (mins: number): number =>\r\n      (mins / verticalPrecision) *\r\n      (verticalPrecision / visualGridVerticalPrecision),\r\n    [verticalPrecision, visualGridVerticalPrecision]\r\n  );\r\n\r\n\r\n\r\n  // const [pendingCreation, setPendingCreation] =\r\n  //   useState<Events | null>(null);\r\n\r\n\r\n  for (let i = 0; i < numVisualVerticalCells; i++) {\r\n    times.push(i);\r\n  }\r\n\r\n\r\n  for (let i = 0; i < numVerticalCells; i++) {\r\n    verticalMarkers.push(i);\r\n  }\r\n\r\n\r\n  useEffect(\r\n    function updateGridDimensionsOnSizeOrCellCountChange() {\r\n      if (!schedulerRef.current) {\r\n        setDimensions([0, 0]);\r\n        return;\r\n      }\r\n\r\n      setDimensions([schedulerRef.current.clientHeight, schedulerRef.current.clientWidth]);\r\n    },\r\n    [size, numVisualVerticalCells],\r\n  );\r\n\r\n\r\n\r\n  const startOfWeek = useMemo(\r\n    () => moment(originDate).clone().startOf(\"week\"),\r\n    [originDate]\r\n  );\r\n  const endOfWeek = moment(originDate).clone().endOf(\"week\");\r\n\r\n  // originDate is set to the startOfWeek not just some arbitrary date passed by the user\r\n  // this will make it easier to figure out the position of the date range horizontally\r\n  // as originDate is mainly used to calculate the x position\r\n\r\n  // numVerticalCells is set as the numVisualVeritcal cells because the ranges need to be\r\n  // positioned relative to the visual vertical cells not the vertical cells\r\n  const dateRangeToCells = useMemo(() => {\r\n    return createMapDateRangeToCells({\r\n      originDate: startOfWeek.toDate(),\r\n      numVerticalCells: numVisualVerticalCells,\r\n      numHorizontalCells,\r\n      toX,\r\n      toY,\r\n    });\r\n  }, [toY, numVisualVerticalCells, numHorizontalCells, startOfWeek]);\r\n\r\n  const cellInfoToDateRanges = useMemo(() => {\r\n    return createMapCellInfoToRecurringTimeRange({\r\n      originDate: startOfWeek.toDate(),\r\n      fromY: toMin,\r\n      fromX: toDay,\r\n    });\r\n  }, [toMin, startOfWeek]);\r\n\r\n  const cellInfoToSingleDateRange = useCallback(\r\n    (cell: CellInfo): DateRange => {\r\n      const [first, ...rest] = cellInfoToDateRanges(cell);\r\n      invariant(\r\n        rest.length === 0,\r\n        `Expected \"cellInfoToSingleDateRange\" to return a single date range, found ${\r\n          rest.length\r\n        } additional ranges instead. ${JSON.stringify(first)} - ${JSON.stringify(rest)}`,\r\n      );\r\n\r\n      return first;\r\n    },\r\n    [cellInfoToDateRanges],\r\n  );\r\n\r\n \r\n\r\n\r\n  const maxRangeHeightSpan = useMemo(() => { \r\n    \r\n    return toY(maxVerticalPrecision);\r\n    \r\n  }, [toY, maxVerticalPrecision]);\r\n\r\n    const minRangeHeightSpan = useMemo(() => {\r\n      return toY(verticalPrecision)\r\n    }, [toY, verticalPrecision])\r\n\r\n\r\n  const grid = useMemo<Grid | null>(() => {\r\n    if (totalHeight === null || totalWidth === null) {\r\n      return null;\r\n    }\r\n\r\n    return createGrid({\r\n      totalHeight: cellHeight? cellHeight * numVisualVerticalCells: totalHeight,\r\n      totalWidth: cellWidth? cellWidth * numHorizontalCells: totalWidth,\r\n      numHorizontalCells,\r\n      numVerticalCells,\r\n      numVisualVerticalCells,\r\n      maxRangeHeightSpan,\r\n      minRangeHeightSpan,\r\n    });\r\n  }, [totalHeight, totalWidth, numHorizontalCells, numVerticalCells, numVisualVerticalCells, maxRangeHeightSpan, minRangeHeightSpan, cellHeight, cellWidth]);\r\n\r\n\r\n\r\n\r\n  const checkValidDateRange = useCallback((id: string, dateRange: DateRange) => {\r\n    // console.log('checking valid date');\r\n    // check if within hours\r\n    const dayOfWeek = dateRange[0].getDay();\r\n\r\n    if (hours && hours[dayOfWeek]){\r\n      const start = hours[dayOfWeek][0];\r\n      const end = hours[dayOfWeek][1];\r\n      start.setFullYear(dateRange[0].getFullYear(), dateRange[0].getMonth(), dateRange[0].getDate());\r\n      end.setFullYear(dateRange[0].getFullYear(), dateRange[0].getMonth(), dateRange[0].getDate());\r\n      if (!isWithinInterval(dateRange[0], { start, end }) || !isWithinInterval(dateRange[1], { start, end })){\r\n        return false;\r\n      }\r\n    }\r\n\r\n    if (closedDaysTimes){\r\n      for(let i = 0; i < closedDaysTimes.length; i++){\r\n        const closedDayTime = closedDaysTimes[i];\r\n        \r\n        if (rangesOverlap(dateRange, closedDayTime)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (!eventsOverlap){\r\n      const allEvents : EventDetails[] = [];\r\n      if (dynamicEvents){\r\n       allEvents.push(...Object.entries(dynamicEvents).filter(value => value[0] !== id).map(value => value[1]));\r\n      }\r\n      if (staticEvents){\r\n        allEvents.push(...Object.entries(staticEvents).filter(value => value[0] !== id).map(value => value[1]));\r\n      }\r\n      for(let i = 0; i < allEvents.length; i++){\r\n        const { range } = allEvents[i];\r\n        if (rangesOverlap(dateRange, range)){\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }, [hours, closedDaysTimes, dynamicEvents, staticEvents, eventsOverlap]);\r\n\r\n  // useEffect(\r\n  //   function updatePendingCreationOnDragBoxUpdate() {\r\n  //     if (grid === null || box === null) {\r\n  //       setPendingCreation(null);\r\n  //       return;\r\n  //     }\r\n      \r\n  //     const cell = grid.getCellFromRect(box, true);\r\n      \r\n  //     const dateRanges = cellInfoToDateRanges(cell);\r\n\r\n  //     let events : Events = {};\r\n\r\n  //     dateRanges.forEach(dateRange => { \r\n  //       if (checkValidDateRange(\"\", dateRange))\r\n  //         events = {...events, ...generateEvent({ range: dateRange })}\r\n  //     });\r\n\r\n  //     setPendingCreation(events);\r\n  //   },\r\n  //   [box, grid, cellInfoToDateRanges, toY, generateEvent, checkValidDateRange],\r\n  // );\r\n\r\n  const [[activeRangeId, activeCellIndex], setActive] = useState<\r\n    [string, number] | [null, null]\r\n  >([null, null]);\r\n\r\n  // useEffect(\r\n  //   function updateScheduleAfterDraggingFinished() {\r\n  //     // if (newEventsAddedTo === 'none') { // for some reason when you change newEventsAddedTo to none this code makes all events disappear\r\n  //     //   return;\r\n  //     // }\r\n\r\n  //     if (hasFinishedDragging) {\r\n  //       if (newEventsAddedTo === 'dynamic')\r\n  //         onChangeDynamicEvents(mergeEvents(dynamicEvents, pendingCreation));\r\n\r\n  //       if (newEventsAddedTo === 'static')\r\n  //         onChangeStaticEvents(mergeEvents(staticEvents, pendingCreation));\r\n  //       setPendingCreation(null);\r\n  //     }\r\n  //   },\r\n  //   [\r\n  //     hasFinishedDragging,\r\n  //     newEventsAddedTo,\r\n  //     onChangeDynamicEvents,\r\n  //     onChangeStaticEvents,\r\n  //     setPendingCreation,\r\n  //     pendingCreation,\r\n  //     staticEvents,\r\n  //     dynamicEvents\r\n  //   ],\r\n  // );\r\n\r\n  // useEffect(\r\n  //   function clearActiveBlockAfterCreation() {\r\n  //     if (pendingCreation === null) {\r\n  //       setActive([null, null]);\r\n  //     }\r\n  //   },\r\n  //   [pendingCreation],\r\n  // );\r\n\r\n  const handleEventChange = useCallback<OnChangeCallback>(\r\n    (newEventDetails, id) => {\r\n\r\n      if (!dynamicEvents && newEventDetails) {\r\n        onChangeDynamicEvents({[id]: newEventDetails});\r\n        return;\r\n      }\r\n\r\n      const newEvents = {...dynamicEvents};\r\n\r\n      if (!newEventDetails) {\r\n        delete newEvents[id];\r\n      } else {\r\n        if (\r\n          isEqual(newEventDetails.range[0], newEvents[id].range[0]) &&\r\n          isEqual(newEventDetails.range[1], newEvents[id].range[1])\r\n        ) {\r\n          return;\r\n        }\r\n        newEvents[id] = newEventDetails;\r\n\r\n      }\r\n\r\n      onChangeDynamicEvents(newEvents);\r\n    },\r\n    [dynamicEvents, onChangeDynamicEvents],\r\n  );\r\n\r\n  const getIsActive = useCallback(\r\n    ({ rangeId, cellIndex }) => {\r\n      return rangeId === activeRangeId && cellIndex === activeCellIndex;\r\n    },\r\n    [activeCellIndex, activeRangeId],\r\n  );\r\n\r\n\r\n  // useEffect(\r\n  //   function cancelPendingCreationOnSizeChange() {\r\n  //     cancel();\r\n  //   },\r\n  //   [size, cancel],\r\n  // );\r\n\r\n  useEffect(\r\n    function scrollToActiveTimeBlock() {\r\n      if (!document.activeElement) {\r\n        return;\r\n      }\r\n\r\n      if (!root.current || !root.current.contains(document.activeElement)) {\r\n        return;\r\n      }\r\n\r\n      scrollIntoView(document.activeElement, {\r\n        scrollMode: 'if-needed',\r\n        block: 'nearest',\r\n        inline: 'nearest',\r\n      });\r\n    },\r\n    [staticEvents, dynamicEvents],\r\n  );\r\n\r\n  \r\n  const [wasInitialScrollPerformed, setWasInitialScrollPerformed] = useState(\r\n    false,\r\n  );\r\n\r\n  useEffect(\r\n    function performInitialScroll() {\r\n      if (wasInitialScrollPerformed || !root.current || !grid) {\r\n        return;\r\n      }\r\n\r\n      const range = dateRangeToCells(\r\n        getEarliestTimeRange({...dynamicEvents,...staticEvents}) || [\r\n          addHours(originDate, defaultHours[0]),\r\n          addHours(originDate, defaultHours[1]),\r\n        ],\r\n      );\r\n      if (range[0]){\r\n        const rect = grid.getRectFromCell(range[0]);\r\n        const { top, bottom } = rect;\r\n\r\n        if (top === 0 && bottom === 0) {\r\n          return;\r\n        }\r\n\r\n        // IE, Edge do not support it\r\n        if (!('scrollBy' in root.current)) {\r\n          return;\r\n        }\r\n\r\n        root.current.scrollBy(0, top);\r\n      }\r\n\r\n      setWasInitialScrollPerformed(true);\r\n    },\r\n    [\r\n      wasInitialScrollPerformed,\r\n      grid,\r\n      staticEvents,\r\n      dynamicEvents,\r\n      defaultHours,\r\n      originDate,\r\n      dateRangeToCells,\r\n    ],\r\n  );\r\n\r\n  const handleBlur: React.FocusEventHandler = useCallback(\r\n    event => {\r\n      if (!event.target.contains(document.activeElement)) {\r\n        setActive([null, null]);\r\n      }\r\n    },\r\n    [setActive],\r\n  );\r\n\r\n\r\n  const handleCellClick = useCallback(\r\n    (dayIndex: number, timeIndex: number) => (event: React.MouseEvent<HTMLDivElement>) => {\r\n      if (!grid || newEventsAddedTo === \"none\") {\r\n        return;\r\n      }\r\n\r\n      \r\n\r\n      const target = (event.target as HTMLElement);\r\n\r\n      // const offset = (grid.cellHeight * (timeIndex * (verticalPrecision / visualGridVerticalPrecision)));\r\n      let percentageClick = 0;\r\n      if (target){\r\n        const rect = target.getBoundingClientRect();\r\n        if (rect){\r\n          // console.log(1 * rect.top);\r\n          percentageClick = event.clientY - 1 * rect.top // - event.currentTarget.offsetTop // or offset;\r\n          percentageClick = (percentageClick / 100.0);\r\n        }\r\n      }\r\n       \r\n\r\n      const spanY = toY(cellClickPrecision);\r\n      let precisionedTimeIndex = timeIndex * (verticalPrecision / visualGridVerticalPrecision);\r\n      if (verticalPrecision < visualGridVerticalPrecision){\r\n        const factor = visualGridVerticalPrecision / (verticalPrecision * 1.0);\r\n        const percentage = 1 / (factor * 1.0);\r\n        \r\n        // console.log(\"percentage: \", percentage);\r\n        // console.log('percentageClick: ', percentageClick)\r\n        if (percentageClick > percentage){\r\n          const numberOfTimesFactor = Math.floor(percentageClick / percentage);\r\n          const rounded = Math.round(percentageClick - (numberOfTimesFactor * percentage));\r\n          precisionedTimeIndex +=\r\n            ((numberOfTimesFactor + rounded) * percentage);\r\n        }else{\r\n          precisionedTimeIndex += Math.floor(percentageClick / percentage) * percentage;\r\n        }\r\n        \r\n      }\r\n      const cell = {\r\n        startX: dayIndex,\r\n        startY: precisionedTimeIndex,\r\n        endX: dayIndex,\r\n        endY: spanY + precisionedTimeIndex,\r\n        spanY,\r\n        spanX: getSpan(dayIndex, dayIndex),\r\n      };\r\n\r\n      // console.log(event.clientY, offset, percentageClick, timeIndex * (verticalPrecision / visualGridVerticalPrecision), cell);\r\n\r\n      const dateRanges = cellInfoToDateRanges(cell);\r\n\r\n      let events : Events = {};\r\n\r\n      dateRanges.forEach(dateRange => { events = {...events, ...generateEvent({ range: dateRange })}});\r\n\r\n      if (checkValidDateRange(\"\", dateRanges[0])){\r\n        // setPendingCreation(events);\r\n\r\n        if (newEventsAddedTo === 'dynamic')\r\n          onChangeDynamicEvents(mergeEvents(dynamicEvents, events));\r\n\r\n        if (newEventsAddedTo === 'static')\r\n          onChangeStaticEvents(mergeEvents(staticEvents, events));\r\n      }\r\n\r\n      event.stopPropagation();\r\n      event.preventDefault();\r\n    },\r\n    [grid, newEventsAddedTo, toY, cellClickPrecision, cellInfoToDateRanges, generateEvent, checkValidDateRange, verticalPrecision, visualGridVerticalPrecision]\r\n  );\r\n\r\n\r\n\r\n  const baseRect = grid?.getRectFromCell({\r\n    startX: 0,\r\n    startY: 0,\r\n    endX: 0,\r\n    endY: 0,\r\n    spanX: 1,\r\n    spanY: 1,\r\n  });\r\n\r\n  const markerHeight = grid ? (grid.cellHeight * grid.ratioVerticalToVisualVertical) : undefined;\r\n  const markerWidth = grid ? grid.cellWidth : undefined;\r\n\r\n  return (\r\n    <div className={styles.root} style={{ height, width}}>\r\n      <div className={styles[\"scheduler-header\"]}>\r\n        <div className={styles[\"week-of-indicator\"]}>\r\n          Week of: {startOfWeek.format(\"L\")} - {endOfWeek.format(\"L\")}\r\n        </div>\r\n      </div>\r\n      <div className={styles[\"scheduler-body\"]} onBlur={handleBlur}>\r\n        <div className={styles[\"scheduler-table\"]} ref={root}>\r\n          <div className={styles[\"layer-container\"]} ref={schedulerRef}>\r\n            \r\n            {grid && (\r\n              <Bounds \r\n                dateRangeToCells={dateRangeToCells}\r\n                grid={grid}\r\n                hours={hours}\r\n                closedDaysTimes={closedDaysTimes}\r\n                startOfWeek={startOfWeek}\r\n              />)\r\n            }\r\n            {/* {isDragging && (\r\n              <div className=\"drag-box\" style={dragBoxStyle}>\r\n                {hasFinishedDragging && <div className=\"popup\" />}\r\n              </div>\r\n            )} */}\r\n            {/* {grid && dynamicEvents && pendingCreation && (\r\n              <Schedule\r\n                events={newEventsAddedTo === 'dynamic' ? mergeEvents(dynamicEvents, pendingCreation): dynamicEvents}\r\n                dateRangeToCells={dateRangeToCells}\r\n                grid={grid}\r\n                moveAxis=\"none\"\r\n                cellInfoToDateRange={cellInfoToSingleDateRange}\r\n                checkValidDateRange={checkValidDateRange}\r\n                getIsActive={getIsActive}\r\n                eventContentComponent={eventContentComponent}\r\n                type=\"dynamic\"\r\n                className=\"dynamic is-pending-creation\"\r\n              />\r\n            )} */}\r\n            {grid && dynamicEvents && (\r\n              <Schedule\r\n                events={dynamicEvents}\r\n                isMovable\r\n                dateRangeToCells={dateRangeToCells}\r\n                grid={grid}\r\n                moveAxis=\"both\"\r\n                isResizable\r\n                isDeletable\r\n                cellInfoToDateRange={cellInfoToSingleDateRange}\r\n                onChange={handleEventChange}\r\n                checkValidDateRange={checkValidDateRange}\r\n                onActiveChange={setActive}\r\n                onClick={onEventClick}\r\n                getIsActive={getIsActive}\r\n                disableDelete={disableDelete}\r\n                eventContentComponent={eventContentComponent}\r\n                eventRootComponent={eventRootComponent}\r\n                type=\"dynamic\"\r\n                className={styles.dynamic}\r\n              />\r\n            )}\r\n            {/* {grid && staticEvents && pendingCreation && (\r\n              <Schedule\r\n                events={newEventsAddedTo === 'static' ? mergeEvents(staticEvents, pendingCreation): staticEvents}\r\n                dateRangeToCells={dateRangeToCells}\r\n                grid={grid}\r\n                moveAxis=\"none\"\r\n                cellInfoToDateRange={cellInfoToSingleDateRange}\r\n                checkValidDateRange={checkValidDateRange}\r\n                getIsActive={getIsActive}\r\n                eventContentComponent={eventContentComponent}\r\n                type=\"static\"\r\n                className=\"static is-pending-creation\"\r\n              />\r\n            )} */}\r\n            {grid && staticEvents && (\r\n              <Schedule\r\n                events={staticEvents}\r\n                dateRangeToCells={dateRangeToCells}\r\n                grid={grid}\r\n                moveAxis=\"none\"\r\n                cellInfoToDateRange={cellInfoToSingleDateRange}\r\n                checkValidDateRange={checkValidDateRange}\r\n                onActiveChange={setActive}\r\n                onClick={onEventClick}\r\n                getIsActive={getIsActive}\r\n                disableDelete={disableDelete}\r\n                eventContentComponent={eventContentComponent}\r\n                eventRootComponent={eventRootComponent}\r\n                type=\"static\"\r\n                className={styles.static}\r\n              />\r\n            )}\r\n            <div className={styles.calendar} ref={parentRef}>\r\n              {daysOfWeek.map((dayOfWeek) => (\r\n                <div key={dayOfWeek} className={styles[\"day-column-container\"]}>\r\n                  {showVerticalPrecisionMarkers ?\r\n                  <div className={styles[\"day-marker-column\"]}>\r\n                    {verticalMarkers.map(index => (\r\n                      <div \r\n                        key={index}\r\n                        className={styles[\"time-marker\"]}\r\n                        style={{ width: markerWidth , height: markerHeight, top: markerHeight ? markerHeight * index : undefined, left: markerWidth ? markerWidth * dayOfWeek : undefined }}\r\n                      />\r\n                    ))}\r\n                  </div>: null}\r\n                  <div className={styles[\"day-column\"]}>\r\n                    {times.map((timeIndex) => (\r\n                      <Cell\r\n                        rect={grid?.getRectFromCell({\r\n                          startX: dayOfWeek,\r\n                          startY: timeIndex,\r\n                          endX: dayOfWeek + 1,\r\n                          endY: timeIndex + 1,\r\n                          spanX: 1,\r\n                          spanY: 1,\r\n                        })}\r\n                        key={timeIndex}\r\n                        onClick={handleCellClick(\r\n                          dayOfWeek,\r\n                          timeIndex *\r\n                            (numVerticalCells / numVisualVerticalCells),\r\n                        )}\r\n                        timeIndex={timeIndex}\r\n                      >\r\n                        {/* {dayOfWeek}x{timeIndex} */}\r\n                      </Cell>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={`${styles.timeline} ${styles[\"sticky-left\"]}`}>\r\n            {times.map((timeIndex) => (\r\n              <div\r\n                className={styles[\"day-hour\"]}\r\n                style={{ height: baseRect?.height }}\r\n                key={timeIndex}\r\n              >\r\n                <div className={styles[\"time-label\"]}>\r\n                  {moment()\r\n                    .hours(0)\r\n                    .minutes(timeIndex * visualGridVerticalPrecision)\r\n                    .format(\"HH:mm\")}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n\r\n          <div className={`${styles[\"day-labels\"]} ${styles[\"sticky-top\"]}`}>\r\n            <div className={styles.header}>\r\n              <div className={styles[\"sticky-left\"]} />\r\n\r\n              {daysOfWeek.map((dayOfWeek) => (\r\n                <div\r\n                  key={dayOfWeek}\r\n                  className={styles[\"day-column\"]}\r\n                  style={{ width: baseRect?.width }}\r\n                >\r\n                  {startOfWeek.clone().add(dayOfWeek, \"d\").format(\"ddd. DD\")}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default memo(WeekScheduler);\r\n","/* eslint-disable prettier/prettier */\r\nimport moment from 'moment';\r\nimport { CellInfo, DateRange } from '../types';\r\nimport { getSpan } from './getSpan';\r\nimport { differenceInDays, differenceInMinutes, range } from './utility';\r\n\r\nexport const createMapDateRangeToCells = ({\r\n  toX = (x: number) => x,\r\n  toY,\r\n  numVerticalCells,\r\n  originDate,\r\n}: {\r\n  toX: (day: number) => number;\r\n  toY: (min: number) => number;\r\n  numHorizontalCells: number;\r\n  numVerticalCells: number;\r\n  originDate: Date;\r\n}) => ([start, end]: DateRange): CellInfo[] => {\r\n  const originOfThisDay = moment(start).startOf('day');\r\n  // origin date will always be the start of the week\r\n\r\n  // difference in days will always compare the start of the days at 12:00am\r\n  const _startX = toX(differenceInDays(start, originDate));\r\n  const _startY = toY(differenceInMinutes(start, originOfThisDay.toDate()));\r\n  const _endX = toX(differenceInDays(end, originDate));\r\n  const _endY = toY(differenceInMinutes(end, moment(end).startOf('day').toDate())) - 1;\r\n\r\n  let cells = range(_startX, _endX + 1).map(i => {\r\n    const startX = i;\r\n    const endX = i;\r\n    const atStart = i === _startX;\r\n    const atEnd = i === _endX;\r\n    const startY = !atStart ? 0 : _startY;\r\n    const endY = !atEnd ? numVerticalCells - 1 : _endY;\r\n    const spanX = getSpan(startX, endX);\r\n    const spanY = getSpan(startY, endY);\r\n\r\n    return {\r\n      startX,\r\n      startY,\r\n      endX,\r\n      endY,\r\n      spanX,\r\n      spanY,\r\n    };\r\n  });\r\n\r\n  if (moment(end).isSame(moment(end).startOf('day'))) {\r\n    cells.pop();\r\n  }\r\n\r\n\r\n  // filter the cells that are between the 0 days from the originDate (start of week) and 6 days\r\n  cells = cells.filter(({ startX, endX }) => (startX >= 0 && startX <= 6) && (endX >= 0 && endX <= 6));\r\n\r\n  return cells;\r\n};\r\n","/* eslint-disable prettier/prettier */\r\nimport compareAsc from 'date-fns/compareAsc';\r\nimport setDay from 'date-fns/setDay';\r\nimport { Events } from '../components/WeekScheduler/WeekScheduler';\r\nimport { DateRange } from '../types';\r\n\r\nexport function getEarliestTimeRange(\r\n  events: Events,\r\n): DateRange | undefined {\r\n  return Object.values(events).map(ed => ed.range).sort(([startA], [startB]) =>\r\n    compareAsc(setDay(startA, 0), setDay(startB, 0)),\r\n  )[0];\r\n}\r\n","import Tippy from '@tippyjs/react'\r\nimport moment from 'moment'\r\nimport React, { useMemo, useState } from 'react'\r\nimport 'tippy.js/dist/tippy.css';\r\nimport './App.css'\r\n\r\nimport {\r\n  clampWrapInclusive,\r\n  ClosedDaysTimes,\r\n  DefaultEventRootComponent,\r\n  EventContentProps,\r\n  EventDetails,\r\n  EventRootProps,\r\n  Events,\r\n  Hours,\r\n  WeekScheduler\r\n} from 'react-week-schedulr'\r\nimport 'react-week-schedulr/dist/index.css'\r\n\r\nconst EventRoot = React.forwardRef<any, EventRootProps>(function EventRoot(\r\n  { handleDelete, disableDelete, type, ...props },\r\n  ref\r\n) {\r\n  return (\r\n    <Tippy\r\n      arrow\r\n      interactive\r\n      disabled={disableDelete || type === 'static'}\r\n      hideOnClick={false}\r\n      className='tooltip'\r\n      content={\r\n        <button disabled={disableDelete} onClick={handleDelete}>\r\n          Delete\r\n        </button>\r\n      }\r\n    >\r\n      <DefaultEventRootComponent\r\n        handleDelete={handleDelete}\r\n        disableDelete={disableDelete}\r\n        type={type}\r\n        {...props}\r\n        ref={ref}\r\n      />\r\n    </Tippy>\r\n  )\r\n})\r\n\r\nconst renderContent = ({ details, dateRange, type }: EventContentProps) => {\r\n  return (\r\n    <div className='event-content' style={{ textAlign: 'center' }}>\r\n      {' '}\r\n      {/* give className of event-content for padding */}\r\n      {type === 'static' ? (\r\n        <>Can't view details</>\r\n      ) : (\r\n        <>\r\n          {details.title ? details.title : 'No Title'}\r\n          <div>\r\n            {moment(dateRange[0]).format('lll')} -{' '}\r\n            {moment(dateRange[1]).format('lll')}\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst generateEvent = (eventDetails: EventDetails): Events => {\r\n  const id = String(Math.random())\r\n  return { [id]: { ...eventDetails, title: 'newEvent ' + id } }\r\n}\r\n\r\nconst initialDynamicEvents: Events = {\r\n  '1': { range: [new Date(2021, 8, 22, 12), new Date(2021, 8, 22, 13)] },\r\n  '2': {\r\n    range: [new Date(2021, 8, 23, 14), new Date(2021, 8, 24, 15)],\r\n    title: 'work time'\r\n  }\r\n}\r\n\r\nconst initialStaticEvents: Events = {\r\n  '3': {\r\n    range: [new Date(2021, 8, 23, 3), new Date(2021, 8, 23, 5)],\r\n    title: 'break time static'\r\n  },\r\n  '4': {\r\n    range: [new Date(2021, 8, 23, 6), new Date(2021, 8, 23, 8)],\r\n    title: 'work time static'\r\n  }\r\n}\r\n\r\nconst hours: Hours = {\r\n  2: [new Date(2021, 7, 23, 3), new Date(2021, 7, 23, 16)]\r\n}\r\n\r\nconst closedDaysTimes: ClosedDaysTimes = [\r\n  [new Date(2021, 8, 20, 12), new Date(2021, 8, 20, 16)]\r\n]\r\n\r\nconst weeks = [0, 1, 2, 3, 4]\r\nconst originDate = new Date(2021, 8, 23)\r\n\r\nconst App = () => {\r\n  const [currentYear, setCurrentYear] = useState(originDate.getFullYear())\r\n  const [currentMonth, setCurrentMonth] = useState(originDate.getMonth())\r\n  const [currentWeek, setCurrentWeek] = useState(\r\n    Math.ceil(\r\n      (originDate.getDate() + new Date(currentYear, currentMonth, 1).getDay()) /\r\n        7\r\n    ) - 1\r\n  )\r\n\r\n  const [events, setEvents] = useState(initialDynamicEvents)\r\n  const [staticEvents, setStaticEvents] = useState<Events>(initialStaticEvents)\r\n\r\n  const addMonth = (amount: 1 | -1) => {\r\n    if (currentMonth === 11 && amount === 1)\r\n      setCurrentYear((current) => current + 1)\r\n    if (currentMonth === 0 && amount === -1)\r\n      setCurrentYear((current) => current - 1)\r\n    setCurrentMonth((current) => clampWrapInclusive(current + amount, 0, 11))\r\n    setCurrentWeek(0)\r\n  }\r\n\r\n  const originDay = useMemo(() => {\r\n    const startDayOfMonth = moment(new Date(currentYear, currentMonth, 1))\r\n    return startDayOfMonth.add(currentWeek, 'w').toDate()\r\n  }, [currentYear, currentMonth, currentWeek])\r\n  return (\r\n    <div className='App'>\r\n      <div className='scheduler-year'>\r\n        <button className='month-button' onClick={() => addMonth(-1)}>\r\n          {' '}\r\n          {'<'}{' '}\r\n        </button>\r\n        <span>\r\n          {moment(new Date(currentYear, currentMonth)).format(\"MMM' YYYY\")}\r\n        </span>\r\n        <button className='month-button' onClick={() => addMonth(1)}>\r\n          {' '}\r\n          {'>'}{' '}\r\n        </button>\r\n      </div>\r\n      <div className='week-navigator'>\r\n        {weeks.map((element, index) => (\r\n          <button\r\n            key={element}\r\n            onClick={() => setCurrentWeek(index)}\r\n            className={`week-indicator ${\r\n              currentWeek === index ? 'current' : ''\r\n            }`}\r\n          />\r\n        ))}\r\n      </div>\r\n      <WeekScheduler\r\n        // cellWidth={150}\r\n        // width=\"100%\"\r\n        cellHeight={100}\r\n        height='710px'\r\n        dynamicEvents={events}\r\n        onChangeDynamicEvents={setEvents}\r\n        staticEvents={staticEvents}\r\n        onChangeStaticEvents={setStaticEvents}\r\n        newEventsAddedTo='dynamic'\r\n        generateEvent={generateEvent}\r\n        cellClickPrecision={120}\r\n        hours={hours}\r\n        closedDaysTimes={closedDaysTimes}\r\n        eventsOverlap\r\n        eventRootComponent={EventRoot}\r\n        eventContentComponent={renderContent}\r\n        maxVerticalPrecision={360}\r\n        verticalPrecision={30}//{5}\r\n        visualGridVerticalPrecision={120}//{120}\r\n        showVerticalPrecisionMarkers\r\n        originDate={originDay}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}